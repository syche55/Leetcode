"""
Let's call an array A a mountain if the following properties hold:

A.length >= 3
There exists some 0 < i < A.length - 1 such that A[0] < A[1] < ... A[i-1] < A[i] > A[i+1] > ... > A[A.length - 1]
Given an array that is definitely a mountain, return any i such that A[0] < A[1] < ... A[i-1] < A[i] > A[i+1] > ... > A[A.length - 1]
"""

#33%
class Solution:
    def peakIndexInMountainArray(self, A: List[int]) -> int:
        for i in range(0, len(A)):
            if A[i] >A[i+1]:
                return i
                
#77%
class Solution:
    def peakIndexInMountainArray(self, A: List[int]) -> int:        
        lb = 0
        ub = len(A)-1
        
        while (lb < ub):
            ans = (lb+ub) //2
            if A[ans] > A[ans - 1] and A[ans] >A[ans+1]:
                return ans
            if A[ans] < A[ans-1]:
                ub = ans
            if A[ans] < A[ans + 1]:
                lb = ans + 1
        return ans
