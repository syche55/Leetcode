class Solution:
    def longestCommonPrefix(self, strs: 'List[str]') -> 'str':
        answer = ""
        sorstrs = sorted(strs, key=len)
        cnt_strs = len(strs)
        if cnt_strs == 0:
            return ""
        elif cnt_strs ==1:
            return strs[0]
        else:
            cnt_dig = len(sorstrs[0])        
            cplist = []
            flag = True
            for i in range(0, cnt_dig):                
                for j in range(1, cnt_strs):
                    cpdig = (list(sorstrs[0]))[i]
                    if cpdig != (list(sorstrs[j])[i]):
                        flag = False
                        break
                    else:        
                        flag = True                
                if flag==True:
                    cplist.append(cpdig)
                else:
                    break
            answer = ''.join(cplist)
            return answer
        


//sorted could sort the original list, key is the rule
//use flag to indicate a condition
//first break: if false is found, do not let the inner loop continues going, 
//otherwise the result would be'aba' (aba, abc, abab) while 'a'makes the flag 'True' again
//second break: if false is found, the loop outside should exit as well,
//otherwise the result would be 'a'(aca, cba), where the digit loop continues going,
//and the third digit 'a' is found to be a common factor
//''.join(list)combines a list to a string
