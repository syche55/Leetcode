"""
Given an array of size n, find the majority element. The majority element is the element that appears more than âŒŠ n/2 âŒ‹ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2
"""

class Solution:
    def majorityElement(self, nums: List[int]) -> int:
        from collections import Counter
        c = Counter(nums)
        sorted_nums = sorted(c.items(), key = lambda kv:kv[1], reverse=True)
        #c.items() returns a pair(key, value)
        #sorted(sort what, key what, reverse)
        #lambda kv:kv[1], take pair(key,value) as input, returns value
        return sorted_nums[0][0]
OR:        
        for key in c:
            if c[key] > len(nums)/2:
                return key
