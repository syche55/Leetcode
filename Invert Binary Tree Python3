#Input:
#     4
#   /   \
#  2     7
# / \   / \
#1   3 6   9

#Output:
#     4
#   /   \
#  7     2
# / \   / \
#9   6 3   1

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        if not root:
            return
        
        temp = root.left
        root.left = root.right
        root.right = temp
        
        self.invertTree(root.left)
        self.invertTree(root.right)
        
        return root
        
        
  class Solution:
    def invertTree(self, root: TreeNode) -> TreeNode:
        if root:
            invert = self.invertTree
            root.left, root.right = invert(root.right), invert(root.left)
        return root
        
  #swap and recursion
