# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isUnivalTree(self, root: TreeNode) -> bool:
        if not root:
            return False
        left_correct=(not root.left or (root.left).val == root.val and self.isUnivalTree(root.left))
        right_correct=(not root.right or (root.right).val == root.val and self.isUnivalTree(root.right)) 
        return left_correct and right_correct
        
# Faster
        
class Solution:
    def isUnivalTree(self, root: TreeNode) -> bool:
        if not root:
            return False
        
        vals = []
        def dfs(node):
            if node:
                vals.append(node.val) 
                dfs(node.left)
                dfs(node.right)
                
        dfs(root)
        return len(set(vals)) == 1
