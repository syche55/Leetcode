"""
Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.
"""

class Solution:
    def hammingDistance(self, x: int, y: int) -> int:
        ans = 0
        for i in range (0, 32):
            bx = x%2
            by = y%2
            if bx != by:
                ans += 1 
            x >>=1
            y >>=1            
        return ans
        
class Solution:
    def hammingDistance(self, x: int, y: int) -> int:
        ans = 0
        xor = x ^ y
        while xor > 0:
            ans += xor & 1
            xor >>= 1
        return ans
