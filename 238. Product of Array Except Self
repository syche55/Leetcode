"""
Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of nums except nums[i].

Example:

Input:  [1,2,3,4]
Output: [24,12,8,6]
Note: Please solve it without division and in O(n).
"""

class Solution:
    def productExceptSelf(self, nums: List[int]) -> List[int]:
        """
        24 = 2 * 3 * 4
        12 = 1 * 3 * 4
        8 = 1 * 2 * 4
        6 = 1 * 2 * 3
        [1, 2, 3, 4]
        [1, 1, 2, 6]
        [24,12,4, 1]
        """
        n = len(nums)
        ans = []
        left = [1]*n      #Sometimes if we do not assign places beforehands, index error will occur
        right = [1]*n
        
        for i in range(1, n):
            left[i] = nums[i-1] * left[i-1]
        
        for j in range(n-2, -1, -1):
            right[j] = nums[j+1] * right[j+1]
            
        for i, j in zip(left, right):
            ans.append(i * j)
            
        return ans
