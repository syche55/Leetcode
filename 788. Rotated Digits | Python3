X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.  Each digit must be rotated - we cannot choose to leave it alone.

A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other; 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.

Now given a positive number N, how many numbers X from 1 to N are good?

Example:
Input: 10
Output: 4
Explanation: 
There are four good numbers in the range [1, 10] : 2, 5, 6, 9.
Note that 1 and 10 are not good numbers, since they remain unchanged after rotating.


class Solution:
    def rotatedDigits(self, N: int) -> int:
        ans = 0
        def goodCheck(num):
            """
            input: str
            """
            if '3' in num or '4' in num or '7' in num:
                return False
            elif (((num.replace('2','')).replace('5', '')).replace('6', '')).replace('9', '') == '':
                return True
            elif num == num[::-1] and '2' not in num and '5' not in num and '6' not in num and '9' not in num:
                return False
            elif ((num.replace('0','')).replace('1', '')).replace('8', '') == '':
                return False
            else:
                return True
            
        for i in range(N+1):
            if goodCheck(str(i)):
                ans += 1
        
        return ans
