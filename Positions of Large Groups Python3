"""
In a string S of lowercase letters, these letters form consecutive groups of the same character.

For example, a string like S = "abbxxxxzyy" has the groups "a", "bb", "xxxx", "z" and "yy".

Call a group large if it has 3 or more characters.  We would like the starting and ending positions of every large group

Input: "abcdddeeeeaabbbcd"
Output: [[3,5],[6,9],[12,14]]
"""

#93%
class Solution:
    def largeGroupPositions(self, S: str) -> List[List[int]]:
        container = [S[0]]
        index = []
        for i in range(1, len(S)):
            if S[i] != S[i-1]:
                container.append(S[i])
            else:
                container[len(container)-1] += S[i]
                if len(container[len(container)-1]) == 3:
                    index.append(i-2)
        large = []
        for string in container:
            if len(string)>=3:
                large.append(len(string)-1)
        ans = []
        for i in range(len(large)):
            ans.append([index[i], index[i]+large[i]])
        return ans
            
#98%
class Solution(object):
    def largeGroupPositions(self, S):
        ans = []
        i = 0 # The start of each group
        for j in range(len(S)):
            if j == len(S) - 1 or S[j] != S[j+1]:
                # Here, [i, j] represents a group.
                if j-i+1 >= 3:
                    ans.append([i, j])
                i = j+1
        return ans
