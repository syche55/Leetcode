#    1
#   / \
#  2   2
# / \ / \
#3  4 4  3


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSymmetric(self, root: TreeNode) -> bool:
        if root is None:
            return True
        else:
            return self.isMirror(root.left, root.right)
           
    def isMirror(self, r1, r2):
        if r1 is None and r2 is None:
            return True
        if r1 is not None and r2 is not None:
            if r1.val == r2.val and self.isMirror(r1.left, r2.right) and self.isMirror(r1.right, r2.left):
                return True
        return False
        
