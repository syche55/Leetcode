# Input: 
# ["900 google.mail.com", "50 yahoo.com", "1 intel.mail.com", "5 wiki.org"]
# Output: 
# ["901 mail.com","50 yahoo.com","900 google.mail.com","5 wiki.org","5 org","1 intel.mail.com","951 com"]

class Solution:
    def subdomainVisits(self, cpdomains: List[str]) -> List[str]:
        dictOfWords = {}
        for domain in cpdomains:
            spl = domain[domain.find(' ')+1: ].split('.')
            cnt = int(domain[:domain.find(' ') ])
            if len(spl) >2:        
                x = domain[domain.rfind('.')+1:]
                dictOfWords[x]=dictOfWords.get(x, 0)+cnt    
                y = domain[domain.find('.')+1:]
                dictOfWords[y]=dictOfWords.get(y, 0)+cnt
                z = domain[domain.find(' ')+1:]
                dictOfWords[z]=dictOfWords.get(z, 0)+cnt        
            else:
                x = domain[domain.rfind('.')+1:]
                dictOfWords[x]=dictOfWords.get(x, 0)+cnt        
                z = domain[domain.find(' ')+1:]
                dictOfWords[z]=dictOfWords.get(z, 0)+cnt
        temp = []       
        for key in dictOfWords:
            temp.append(str(dictOfWords[key])+ " " +key )
        return temp
        
        
#Solution:
class Solution(object):
    def subdomainVisits(self, cpdomains):
        ans = collections.Counter()
        for domain in cpdomains:
            count, domain = domain.split()
            count = int(count)
            frags = domain.split('.')
            for i in xrange(len(frags)):
                ans[".".join(frags[i:])] += count

        return ["{} {}".format(ct, dom) for dom, ct in ans.items()]
